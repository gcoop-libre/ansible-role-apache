# {{ ansible_managed }}
{# Set up SSL VirtualHosts #}
<VirtualHost {{ apache_listen_ip }}:{{ apache_listen_port_ssl }}>
{% if item.serveradmin is defined %}
  ServerAdmin {{ item.serveradmin }}
{% endif %}
  DocumentRoot {{ item.documentroot | default(apache_base_dir + '/' + item.servername + '/' + apache_ssl_subdir) }}

{% if item.separate_logs | default(True) %}
  ErrorLog ${APACHE_LOG_DIR}/{{ item.servername }}.error.log
{% if item.separate_logs_proxy_format | default(True) %}
  SetEnvIf X-Forwarded-For "^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+" proxy
  CustomLog ${APACHE_LOG_DIR}/{{ item.servername }}.access.log combined env=!proxy
  CustomLog ${APACHE_LOG_DIR}/{{ item.servername }}.access.log proxy env=proxy
{% else %}
  CustomLog ${APACHE_LOG_DIR}/{{ item.servername }}.access.log combined
{% endif %}
{% endif %}

  ServerName {{ item.servername }}
  UseCanonicalName {{ item.use_canonical_name|default('On') }}

{% if item.serveralias is defined %}
{% for serveralias in item.serveralias %}
  ServerAlias {{ serveralias }}
{% endfor %}
{% endif %}

{% if item.custom_errors | default([]) %}
{% for custom_error in item.custom_errors %}
  ErrorDocument "{{ custom_error.code }}" "{{ custom_error.action }}"
{% endfor %}
{% endif %}

  <IfModule mod_headers.c>
{% if item.frame_options | default(apache_frame_options) != False %}
    Header always set X-Frame-Options {{ item.frame_options | default(apache_frame_options) }}
{% endif %}
    Header always set X-Content-Type-Options nosniff
  </IfModule>

  SSLEngine On
  SSLCipherSuite {{ apache_ssl_cipher_suite }}
  SSLProtocol {{ apache_ssl_protocol }}
  SSLHonorCipherOrder On
{% if item.sts | default(apache_sts) %}
  <IfModule mod_headers.c>
    Header always set Strict-Transport-Security "max-age={{ item.sts_max_age | default(apache_sts_max_age) }}; {% if item.sts_subdomains | default(apache_sts_subdomains) %}includeSubDomains{% endif %}"
  </IfModule>
{% endif %}
{% if apache_vhosts_version == "2.4" %}
  SSLCompression Off
{% if apache_version is version('2.4.11', '>=') %}
  SSLSessionTickets Off
{% endif %}
{% if 'socache_shmcb' in apache_mods_enabled %}
  SSLUseStapling On
{% endif %}
{% endif %}
  SSLCertificateFile {{ item.certificate_file }}
  SSLCertificateKeyFile {{ item.certificate_key_file }}
{% if item.certificate_chain_file is defined %}
  SSLCertificateChainFile {{ item.certificate_chain_file }}
{% endif %}

{% if item.deflate | default(True) %}
  <IfModule mod_deflate.c>
    SetOutputFilter DEFLATE
  </IfModule>

  <IfModule mod_setenvif.c>
    BrowserMatch ^Mozilla/4 gzip-only-text/html
    BrowserMatch ^Mozilla/4\.0[678] no-gzip
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
    # Don't compress images and other uncompressible content
    SetEnvIfNoCase Request_URI \.(?:gif|jpe?g|png|rar|zip|exe|flv|mov|wma|mp3|avi|swf|mp?g)$ no-gzip dont-vary
  </IfModule>

{% if item.deflate_dont_vary | default('User-Agent') %}
  # Make sure proxies don't deliver the wrong content
  <IfModule mod_headers.c>
    Header append Vary {{ item.deflate_dont_vary | default('User-Agent') }} env=!dont-vary
  </IfModule>
{% endif %}
{% endif %}

{% if item.fileetag | default(True) %}
  FileETag MTime Size
{% endif %}

{% if item.aliases | default([]) %}
  <IfModule mod_alias.c>
{% for alias in item.aliases %}
    Alias "{{ alias.name }}" "{{ alias.dest }}"
{% endfor %}
  </IfModule>
{% endif %}

{% if (item.redirect_to_servername | default(True) and item.serveralias is defined) or item.custom_rewrites is defined or item.redirect_to_http | default(False) %}
  <IfModule mod_rewrite.c>
    RewriteEngine On
{% if item.rewrite_base is defined %}
    RewriteBase {{ item.rewrite_base }}
{% endif %}

{% if item.redirect_to_http | default(False) %}
    RewriteCond %{HTTPS} !=Off
    RewriteRule ^ http://%{SERVER_NAME}%{REQUEST_URI}%{QUERY_STRING} [R=301,L]
{% endif %}

{% if item.custom_rewrites is defined %}
{% for custom_rewrite in item.custom_rewrites %}
{% if custom_rewrite.conditions is defined %}
{% for condition in custom_rewrite.conditions %}
    RewriteCond {{ condition.test_string }} {{ condition.pattern }} {{ condition.flags }}
{% endfor %}
{% endif %}
    RewriteRule {{ custom_rewrite.pattern }} {{ custom_rewrite.substitution }} {{ custom_rewrite.flags }}

{% endfor %}
{% endif %}

{% if item.redirect_to_servername | default(True) and item.serveralias is defined %}
    RewriteCond %{HTTP_HOST} !^{{ item.servername | replace('.', '\.') }}$ [NC]
{% if item.exclude_from_redirect is defined %}
{% for serveralias in item.serveralias %}
{% if serveralias in item.exclude_from_redirect %}
    RewriteCond %{HTTP_HOST} !^{{ serveralias | replace('.', '\.') }}$ [NC]
{% endif %}
{% endfor %}
{% endif %}
    RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI}%{QUERY_STRING} [R=301,L]
{% endif %}
  </IfModule>
{% endif %}

  <Directory "{{ item.documentroot | default(apache_base_dir + '/' + item.servername + '/' + apache_ssl_subdir) }}">
{% if item.allowoverride is defined %}
    AllowOverride {{ item.allowoverride }}
{% else %}
    AllowOverride None
{% endif %}
    Options -Indexes +FollowSymLinks
{% if apache_vhosts_version == "2.2" %}
    <IfModule mod_authz_host.c>
      Order allow,deny
      Allow from all
    </IfModule>
{% else %}
    <IfModule mod_authz_core.c>
      Require all granted
    </IfModule>
{% endif %}

{% if item.redirect_to_file is defined %}
    <IfModule mod_rewrite.c>
      RewriteCond %{REQUEST_FILENAME} !-f
      RewriteCond %{REQUEST_FILENAME} !-d
      RewriteRule . {{ item.redirect_to_file }} [L]
    </IfModule>
{% endif %}

{% if item.include_htaccess | default(False) %}
{% if apache_vhosts_version == "2.4" %}
    IncludeOptional "{{ item.documentroot | default(apache_base_dir + '/' + item.servername + '/' + apache_ssl_subdir) }}/.htaccess"
{% else %}
    Include "{{ item.documentroot | default(apache_base_dir + '/' + item.servername + '/' + apache_ssl_subdir) }}/.htaccess"
{% endif %}
{% endif %}

{% if item.documentroot_extra_parameters is defined %}
  {{ item.documentroot_extra_parameters }}
{% endif %}
  </Directory>

{% if item.setenvif is defined %}
  <IfModule mod_setenvif.c>
{% for setenvif in item.setenvif %}
    SetEnvIf {{ setenvif.attribute }} {{ setenvif.pattern }} {{ setenvif.var }}{% if setenvif.value is defined %}={{ setenvif.value }}{% endif %} 
{% endfor %}
  </IfModule>
{% endif %}

{% if item.restricted_access is defined %}
{% for restricted_access in item.restricted_access %}
{% if restricted_access.path is defined %}
  <Directory {% if restricted_access.regex %}~{% endif %} "{% if restricted_access.regex %}^{% endif %}{{ item.documentroot | default(apache_base_dir + '/' + item.servername + '/' + apache_ssl_subdir) }}{{ restricted_access.path }}">
{% if restricted_access.all | default(False) or restricted_access.ips is defined or restricted_access.hosts is defined or restricted_access.env_variables is defined %}
{% if apache_vhosts_version == "2.2" %}
    <IfModule mod_authz_host.c>
      Order deny,allow
      Deny from all
{% if not restricted_access.all | default(False) %}
{% if restricted_access.ips is defined %}
{% for ip in restricted_access.ips %}
      Allow from {{ ip }}
{% endfor %}
{% endif %}
{% if restricted_access.hosts is defined %}
{% for host in restricted_access.hosts %}
      Allow from {{ host }}
{% endfor %}
{% endif %}
{% if restricted_access.env_variables is defined %}
{% for env_variable in restricted_access.env_variables %}
      Allow from env={{ env_variable }}
{% endfor %}
{% endif %}
{% endif %}
    </IfModule>
{% else %}
    <IfModule mod_authz_core.c>
{% if not restricted_access.all | default(False) %}
{% if restricted_access.ips is defined %}
{% for ip in restricted_access.ips %}
      Require ip {{ ip }}
{% endfor %}
{% endif %}
{% if restricted_access.hosts is defined %}
{% for host in restricted_access.hosts %}
      Require host {{ host }}
{% endfor %}
{% endif %}
{% if restricted_access.env_variables is defined %}
{% for env_variable in restricted_access.env_variables %}
      Require env {{ env_variable }}
{% endfor %}
{% endif %}
{% endif %}
      Require all denied
    </IfModule>
{% endif %}
{% endif %}

{% if restricted_access.htpasswd is defined %}
    <IfModule mod_authn_file.c>
      AuthType Basic
      AuthName "{{ item.servername }}"
      AuthUserFile {{ item.documentroot | default(apache_base_dir + '/' + item.servername + '/' + apache_private_subdir) }}{{ restricted_access.htpasswd }}
      Require valid-user
    </IfModule>
{% endif %}
  </Directory>
{% endif %}
{% endfor %}
{% endif %}

{% if item.extra_parameters is defined %}
  {{ item.extra_parameters }}
{% endif %}
</VirtualHost>
